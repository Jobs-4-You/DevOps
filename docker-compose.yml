version: "3.2"

services:
  db:
    container_name: j4u-db
    image: postgres:11-alpine
    restart: "no"
    volumes:
      - type: volume
        source: postgres
        target: /var/lib/postgresql/data
    ports:
      - "5432:5432/tcp"
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PW}
      - POSTGRES_DB=${POSTGRES_DB}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - api

  api-admin:
    container_name: j4u-api-admin
    restart: "no"
    build:
      context: ./server-context
    environment:
      - POSTGRES_USER=$POSTGRES_USER
      - POSTGRES_PW=$POSTGRES_PW
      - POSTGRES_DB=$POSTGRES_DB
    volumes:
      - type: volume
        source: versions
        target: /app/j4u_api/alembic/versions
    depends_on:
      - db
    healthcheck:
      test: ["CMD-SHELL", "curl localhost:5000"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - api
    command: "bash"
    tty: true
    stdin_open: true

  api:
    container_name: j4u-api
    restart: "no"
    build:
      context: ./server-context
    environment:
      - POSTGRES_USER=$POSTGRES_USER
      - POSTGRES_PW=$POSTGRES_PW
      - POSTGRES_DB=$POSTGRES_DB
    depends_on:
      - db
    healthcheck:
      test: ["CMD-SHELL", "curl localhost:5000"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - api

  jobs:
    container_name: j4u-jobs
    restart: "no"
    build:
      context: ./server-context
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PW=${POSTGRES_PW}
      - POSTGRES_DB=${POSTGRES_DB}
    depends_on:
      - api
    command: "./wait-for-it.sh api:5000 -- python -u run_scheduler.py"
    networks:
      - api


    #healthcheck:
    #  test: ["CMD-SHELL", "curl localhost:5000"]
    #  interval: 10s
    #  timeout: 5s
    #  retries: 5

  webapp:
    container_name: j4u-webapp
    restart: "no"
    build:
      context: ./webapp-context
      dockerfile: Dockerfile
    depends_on:
      - api
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "wget --no-check-certificate http://localhost:3000 -O /dev/null > /dev/null 2>&1",
        ]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - api

  nginx:
    container_name: j4u-nginx
    restart: "no"
    build:
      context: ./nginx-context
      dockerfile: Dockerfile
    ports:
      - 80:80
      - 443:443
    depends_on:
      - webapp
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "wget --no-check-certificate http://localhost -O /dev/null > /dev/null 2>&1",
        ]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - api

volumes:
  postgres:
  logs:
  versions:

networks:
  api:
    driver: bridge
